<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>UniversityProject - 日誌</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/ri-zhi.atom.xml" rel="self"></link><id>./</id><updated>2020-07-06T00:00:00+08:00</updated><entry><title>Jul 6, 2020 日誌</title><link href=".%5CJul_06_%202020.html" rel="alternate"></link><published>2020-07-06T00:00:00+08:00</published><updated>2020-07-06T00:00:00+08:00</updated><author><name>40723150</name></author><id>tag:None,2020-07-06:.\Jul_06_ 2020.html</id><summary type="html">&lt;p&gt;利用防寫卡、clonezilla複製磁區，在Ubuntu 20.04新增管理員。
</summary><content type="html">&lt;p&gt;利用防寫卡、clonezilla複製磁區，在Ubuntu 20.04新增管理員。
&lt;/p&gt;
&lt;h2&gt;防寫卡複製&lt;/h2&gt;
&lt;h3&gt;step 1&lt;/h3&gt;
&lt;p&gt;先開機要複製出去(資料來源)那台的電腦，在防寫卡畫面(選擇磁區畫面)按下"F10"進入防寫卡設定，輸入密碼，在系統管理畫面，選擇左方的網路拷貝，拷貝環境：32位元；網卡類型：11 : Intel 1G ndis。&lt;/p&gt;
&lt;h3&gt;step2&lt;/h3&gt;
&lt;p&gt;設定好按套用設定，再進行網路拷貝(按網路拷貝按鈕)。選擇"模式1"為拷貝模式，確認接收端開機自動連線是勾選。按網路拷貝按鈕&lt;/p&gt;
&lt;h3&gt;step3&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;網路拷貝：將整個選擇的磁區內容、設定複製過去。覆蓋。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增量拷貝：將選擇的磁區不同的內容、設定複製過去。覆蓋。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;選擇要複製的選項(視情況選擇網路拷貝或增量拷貝)&lt;/p&gt;
&lt;h3&gt;step4&lt;/h3&gt;
&lt;p&gt;補圖後詳細說明&lt;/p&gt;
&lt;h3&gt;step5&lt;/h3&gt;
&lt;p&gt;若是要複製第三磁區，選擇複製單一作業統，選第三磁區，勾選C槽，傳輸完成後&lt;/p&gt;
&lt;h2&gt;clonezilla硬碟複製&lt;/h2&gt;
&lt;p&gt;clonezilla硬碟複製 開機前硬體確認：硬碟與光碟機連接順序。&lt;/p&gt;
&lt;p&gt;1.備份硬碟來源 (a硬碟)
2. 光碟機
3. 存放備份的硬碟(b硬碟)&lt;/p&gt;
&lt;p&gt;P.S. 存放備份的硬碟(b硬碟)需要比 備份硬碟來源 (a硬碟) 的容量大一樣大或更大，比備份來源小會無法複製。&lt;/p&gt;
&lt;p&gt;利用clonezilla來進行複製硬碟，事先須準備一片已經入燒入進去clonezilla的光碟(到網路上下載clonezilla的iso檔燒錄到光碟裡)，開機時放入clonezilla光碟片，並進入"開機選單"(進入開機選單的快捷鍵會因為各廠牌的電腦而有所不同，當時測試為aser電腦，在出現電腦商logo時按"F12"就進入開機選單)會些換到用光碟機開機(會去讀取clonezilla光碟的資料)。等待一段時間後會進到clonezilla的畫面，選英文，鍵盤定選預設，接下來選硬碟對硬碟(disk to disk)進行複製，硬碟來源選 a硬碟，接收選 b硬碟，其他設定都是預設選項(包括其他未提到的設定)，開始複製硬碟，按Enter，2次y(確認抹除)，複製的時間會因硬碟大小而有所差異(當時複製160GB大約是2分鐘)，複製完成後關機。&lt;/p&gt;
&lt;h2&gt;Ubuntu 20.04&lt;/h2&gt;
&lt;h3&gt;建立管理者&lt;/h3&gt;
&lt;p&gt;&lt;pre class="brush: jscript"&gt;
    sudo adduser 使用者名稱
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;輸入登入者的密碼, 以便使用 sudo 管理者身分執行 adduser&lt;/p&gt;
&lt;p&gt;然後輸入 "使用者名稱" 預設密碼與基本資料後, 準備將 "使用者" 設為管理者&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo usermod -aG sudo s40723150
&lt;/pre&gt;

&lt;p&gt;利用 usermod 指令授予 sudo 權限, 有關 usermod 使用說明, 可以利用 man usermod 取得&lt;/p&gt;
&lt;h3&gt;刪除管理者&lt;/h3&gt;
&lt;p&gt;可以刪除 "使用者" 帳號與其 /home/wcm1 對應用戶目錄。&lt;/p&gt;
&lt;p&gt;sudo deluser --remove-home 使用者名稱&lt;/p&gt;
&lt;h3&gt;修改主機名稱/網路設定&lt;/h3&gt;
&lt;p&gt;牽涉兩個檔案 /etc/hosts 與 /etc/hostname, 修改後必須重新開機&lt;/p&gt;
&lt;p&gt;sudo vi /etc/hosts 將 wcm1 改為 cad1 或 cad2 或其他主機對應名稱&lt;/p&gt;
&lt;p&gt;sudo vi /etc/hostname 也是將 wcm1 改為 主機對應名稱&lt;/p&gt;
&lt;p&gt;sudo vi /etc/Nosts&lt;/p&gt;</content><category term="日誌"></category><category term="防寫卡"></category><category term="clonezilla"></category><category term="Ubuntu 20.04"></category><category term="硬碟複製"></category><category term="建立管理者"></category></entry><entry><title>Jul 5, 2020 日誌</title><link href=".%5CJul_05_%202020.html" rel="alternate"></link><published>2020-07-05T00:00:00+08:00</published><updated>2020-07-05T00:00:00+08:00</updated><author><name>40723150</name></author><id>tag:None,2020-07-05:.\Jul_05_ 2020.html</id><summary type="html">&lt;p&gt;了解 delta printer 的正向與逆向運動方程式
</summary><content type="html">&lt;p&gt;了解 delta printer 的正向與逆向運動方程式

Delta printer是運用 Stewart Platform 機構修改出來的機構，一樣有6個自由度。
Stewart Platform 可伸縮連桿的部分 Delta printer 換成兩個連桿來達到同的功能。&lt;/p&gt;
&lt;p&gt;正向(順向)運動學(forward kinematics)&lt;/p&gt;
&lt;p&gt;由各關節變數求效應器(機構末端)的位置與方向角&lt;/p&gt;
&lt;p&gt;反向運動學(invers kinematics)&lt;/p&gt;
&lt;p&gt;由末端效應器(機構)的位置與方向求各關節變數&lt;/p&gt;</content><category term="日誌"></category></entry><entry><title>Jul 4, 2020 日誌</title><link href=".%5CJul_04_%202020.html" rel="alternate"></link><published>2020-07-04T00:00:00+08:00</published><updated>2020-07-04T00:00:00+08:00</updated><author><name>40723150</name></author><id>tag:None,2020-07-04:.\Jul_04_ 2020.html</id><summary type="html">&lt;p&gt;嘗試利用 Python程式將 Plican 網誌傳送到 Blogger，成功傳送到 Blogger。
</summary><content type="html">&lt;p&gt;嘗試利用 Python程式將 Plican 網誌傳送到 Blogger，成功傳送到 Blogger。

新增/編輯文章到blogger
到想新增/修改的文章對應到的markdown節點，按 add_to_mblogger 按鈕。想修改按 edit_to_mblogger按鈕。
修改成功的話會顯示：
post_id 為 一串文章的ID
已經將更新資料送往 M Blogger!&lt;/p&gt;
&lt;p&gt;文章內的圖片要放絕對位置(網址)&lt;/p&gt;
&lt;p&gt;若出現
&lt;pre class="brush: jscript"&gt;
google.auth.exceptions.RefreshError: ('invalid_scope: Some requested scopes were invalid. {invalid=[a, b, c, e, g, h, i, l, m, ., /, o, p, r, s, t, u, w, :]}', '{\n  "error": "invalid_scope",\n  "error_description": "Some requested scopes were invalid. {invalid\u003d[a, b, c, e, g, h, i, l, m, ., /, o, p, r, s, t, u, w, :]}",\n  "error_uri": "http://code.google.com/apis/accounts/docs/OAuth2.html"\n}')
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;重新轉一次.dat應該可以解決新增/編輯文章到blogger&lt;/p&gt;</content><category term="日誌"></category></entry><entry><title>Jul 3, 2020 日誌</title><link href=".%5CJul_03_%202020.html" rel="alternate"></link><published>2020-07-03T00:00:00+08:00</published><updated>2020-07-03T00:00:00+08:00</updated><author><name>40723150</name></author><id>tag:None,2020-07-03:.\Jul_03_ 2020.html</id><summary type="html">&lt;p&gt;嘗試利用 Python程式將 Plican 網誌傳送到 Blogger，但還沒成功。
將json轉檔成 .pickle 和 .dat
</summary><content type="html">&lt;p&gt;嘗試利用 Python程式將 Plican 網誌傳送到 Blogger，但還沒成功。
將json轉檔成 .pickle 和 .dat
&lt;/p&gt;
&lt;p&gt;想將Pelican網誌利用Pyrhon程式把文章傳到Blogger，我有參考&lt;a href="http://lab.mde.tw/blog/sync-pelican-and-blogger-content.html"&gt;新增 按鈕執行程式&lt;/a&gt;裡面的程式碼，&lt;a href="https://console.developers.google.com/apis/credentials"&gt;Google API&lt;/a&gt;新增Blogger API，去取得json的檔案。&lt;/p&gt;
&lt;p&gt;獲取client_secrets.json：
1. 登錄到您的@gm帳戶
2. 到&lt;a href="https://console.developers.google.com/apis/credentials"&gt;Google API&lt;/a&gt;
3. 接受許可並創建Google API項目
4. 啟用Google Blogger API v3
5. 選擇內部用戶類型並添加新的應用程序名稱
6. 在“ API和服務”下，進入“憑證”頁面
7. 為電腦版應用程式創建“ OAuth 2.0客戶端ID”類型的憑據
8. 下載json檔&lt;/p&gt;
&lt;p&gt;接下來&lt;a href="https://2019wcm.blogspot.com/2019/03/posted-via-python.html"&gt;測試json&lt;/a&gt;，裡面的程式碼是用來測試.json是否正常，正常的話再將.json轉檔成 .pickle 和 .dat。
到&lt;a href="https://github.com/mdecourse/project2020-1/tree/master/tools"&gt;project2020-1倉儲的tools&lt;/a&gt;gmail_json_to_pickle.py是將json轉成pickle，blogger_json_to_pickle.py也是轉成pickle，但存成dat。由於Blogger 憑證與 Gmail 憑證的差異在於 SCOPES 與 build 時 LIbrary 名稱與版本的差異，所以需要分別轉出來。&lt;/p&gt;
&lt;p&gt;轉出來的 .pickle 和 .dat 以及一開始下載的 .json 都需要放在倉儲目錄外部&lt;/p&gt;
&lt;p&gt;@button 裡面的程式，.dat要指到對應的檔案(剛剛轉出來的)，blog_id是對應到該網誌ID，post_id則是代    表文章的ID&lt;/p&gt;</content><category term="日誌"></category></entry></feed>